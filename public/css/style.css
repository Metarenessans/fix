.container {
  max-width: 130rem;
  padding: 0 15px;
  margin: 0 auto;
}
@media (max-width: 768px) {
  .container {
    max-width: 95vw;
  }
}
@media (max-width: 576px) {
  .container {
    padding: 0 7.5px;
    width: 100%;
  }
}

:root {
  --primary-color: white;
  --secondary-color: #202030;
}

/* normalize.css */
/**
 * * 1. Correct the line height in all browsers.
 * * 2. Prevent adjustments of font size after orientation changes in iOS.
 * */
html {
  line-height: 1.15;
  -webkit-text-size-adjust: 100%;
}

/**
 * * Remove the margin in all browsers.
 * */
body {
  margin: 0;
}

/**
 * * Render the `main` element consistently in IE.
 * */
main {
  display: block;
}

/**
 * * Correct the font size and margin on `h1` elements within `section` and
 * * `article` contexts in Chrome, Firefox, and Safari.
 * */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * * 1. Add the correct box sizing in Firefox.
 * * 2. Show the overflow in Edge and IE.
 * */
hr {
  box-sizing: content-box;
  height: 0;
  overflow: visible;
}

/**
 * * 1. Correct the inheritance and scaling of font size in all browsers.
 * * 2. Correct the odd `em` font sizing in all browsers.
 * */
pre,
code,
kbd,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/**
 * * Remove the gray background on active links in IE 10.
 * */
a {
  background-color: transparent;
}

/**
 * * 1. Remove the bottom border in Chrome 57-
 * * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 * */
abbr[title] {
  border-bottom: none;
  text-decoration: underline;
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/**
 * * Add the correct font weight in Chrome, Edge, and Safari.
 * */
b,
strong {
  font-weight: bolder;
}

/**
 * * Add the correct font size in all browsers.
 * */
small {
  font-size: 80%;
}

/**
 * * Prevent `sub` and `sup` elements from affecting the line height in
 * * all browsers.
 * */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/**
 * * Remove the border on images inside links in IE 10.
 * */
img {
  border-style: none;
}

/**
 * * 1. Change the font styles in all browsers.
 * * 2. Remove the margin in Firefox and Safari.
 * */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
}

/**
 * * Show the overflow in IE.
 * * 1. Show the overflow in Edge.
 * */
button,
input {
  overflow: visible;
}

/**
 * * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * * 1. Remove the inheritance of text transform in Firefox.
 * */
button,
select {
  text-transform: none;
}

/**
 * * Correct the inability to style clickable types in iOS and Safari.
 * */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * * Remove the inner border and padding in Firefox.
 * */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * * Restore the focus styles unset by the previous rule.
 * */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * * Correct the padding in Firefox.
 * */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * * 1. Correct the text wrapping in Edge and IE.
 * * 2. Correct the color inheritance from `fieldset` elements in IE.
 * * 3. Remove the padding so developers are not caught out when they zero out
 * *    `fieldset` elements in all browsers.
 * */
legend {
  box-sizing: border-box;
  color: inherit;
  display: table;
  max-width: 100%;
  padding: 0;
  white-space: normal;
}

/**
 * * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 * */
progress {
  vertical-align: baseline;
}

/**
 * * Remove the default vertical scrollbar in IE 10+.
 * */
textarea {
  overflow: auto;
}

/**
 * * 1. Add the correct box sizing in IE 10.
 * * 2. Remove the padding in IE 10.
 * */
[type=checkbox],
[type=radio] {
  box-sizing: border-box;
  padding: 0;
}

/**
 * * Correct the cursor style of increment and decrement buttons in Chrome.
 * */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * * 1. Correct the odd appearance in Chrome and Safari.
 * * 2. Correct the outline style in Safari.
 * */
[type=search] {
  -webkit-appearance: textfield;
  outline-offset: -2px;
}

/**
 * * Remove the inner padding in Chrome and Safari on macOS.
 * */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * * 1. Correct the inability to style clickable types in iOS and Safari.
 * * 2. Change font properties to `inherit` in Safari.
 * */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit;
}

/* * Add the correct display in Edge, IE 10+, and Firefox.
 * */
details {
  display: block;
}

/* * Add the correct display in all browsers.
 * */
summary {
  display: list-item;
}

/**
 * * Add the correct display in IE 10+.
 * */
template {
  display: none;
}

/**
 * * Add the correct display in IE 10.
 * */
[hidden] {
  display: none;
}

picture {
  display: inline-block;
  font-size: 0;
}

figure {
  display: inline-block;
  margin: 0;
}

q::before, q::after {
  content: '"';
}

/* modern reset.css */
/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  /* margin: 0; */
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role=list],
ol[role=list] {
  list-style: none;
}

/* Set core root defaults */
html {
  /* scroll-behavior: smooth; */
}

/* Set core body defaults */
body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  -webkit-text-decoration-skip: ink;
          text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Remove all animations and transitions for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  *,
*::before,
*::after {
    -webkit-animation-duration: 0.01ms !important;
            animation-duration: 0.01ms !important;
    -webkit-animation-iteration-count: 1 !important;
            animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
button:focus,
input:focus,
a:focus {
  outline: none;
}

a {
  display: inline-flex;
  color: inherit;
  text-decoration: none;
}

button {
  font-family: inherit;
  cursor: pointer;
}

br {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
}

.visually-hidden {
  position: absolute;
  clip: rect(0 0 0 0);
  width: 1px;
  height: 1px;
  margin: -1px;
  overflow: hidden;
}

p {
  margin: 0;
  padding: 0;
}

.block-events {
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  pointer-events: none;
}

html {
  font-size: 0.520834vw;
}
@media (max-width: 768px) {
  html {
    font-size: 1.26595vw;
  }
}

body {
  min-width: 320px;
}
body.scroll-disabled {
  height: 100vh;
  overflow-y: hidden;
}

body {
  font-family: "Roboto", "Arial", sans-serif;
  font-size: 1.6rem;
  color: white;
  color: var(--primary-color);
}
body.scroll-disabled {
  margin: 0;
  height: 100%;
  overflow: hidden;
}

main {
  overflow: hidden;
}
main[inert] {
  height: 100%;
  overflow: hidden;
}

.section {
  padding: 5em 0;
}
.section__title {
  margin: 0;
  margin-bottom: 3rem;
  text-align: center;
  font-size: 4rem;
  font-weight: 600;
  line-height: 4rem;
}

.sm-only {
  display: none;
}
@media (max-width: 768px) {
  .sm-only {
    display: block;
  }
}

@media (max-width: 768px) {
  .hide-sm {
    display: none;
  }
}

/* Components */
.btn {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1rem 0.5rem;
  min-width: 12em;
  border-radius: 0.65rem;
  border: none;
  font-size: 2.2rem;
  color: white;
  font-weight: bold;
  transition: all 0.3s ease-out;
}
.btn:disabled {
  opacity: 0.9;
  background-color: aliceblue;
  cursor: not-allowed;
}
.btn:disabled:hover, .btn:disabled:focus {
  background-color: aliceblue;
}
.btn--active {
  background-color: #f5c400;
  color: black;
}
.btn--active:hover, .btn--active:focus {
  background-color: #ffd429;
}
.btn--price {
  background-color: inherit;
  border: 0.1em solid white;
}
.btn--price:hover {
  background-color: white;
  color: #202030;
  color: var(--secondary-color);
}
.btn--reversed {
  background-color: inherit;
  border: 0.1em solid white;
}
.btn--reversed:hover {
  color: #202030;
  color: var(--secondary-color);
  background-color: white;
}

.modal {
  display: flex;
  justify-content: center;
  align-items: center;
  opacity: 0;
  -webkit-user-select: none;
     -moz-user-select: none;
      -ms-user-select: none;
          user-select: none;
  pointer-events: none;
  transition: opacity 0.2s;
  position: fixed;
  z-index: 9999;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 100%;
  height: 100%;
  cursor: pointer;
}
.modal--visible {
  opacity: 1;
  -webkit-user-select: initial;
     -moz-user-select: initial;
      -ms-user-select: initial;
          user-select: initial;
  pointer-events: all;
  transition-delay: 0s;
  -webkit-backdrop-filter: blur(8px);
          backdrop-filter: blur(8px);
}

.form {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  padding: 1em 1.5em 1.4em;
  background-color: #112944;
  width: 52rem;
  font-size: 2rem;
  cursor: initial;
}
@media (max-width: 768px) {
  .form {
    font-size: 3rem;
    width: 90%;
    height: 50%;
  }
}
.form__title {
  padding-bottom: 0.3em;
  margin: 0;
  font-size: 1.75em;
}
.form__inputs {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
}
.form__inputs > * + * {
  margin-top: 0.2em;
}
.form__inputs input {
  width: 100%;
  height: 2em;
  background-color: inherit;
  border: transparent 0.1em solid;
  border-bottom-color: #c4c4c4;
  padding: 0.25em;
  color: white;
  font-size: 1.2em;
}
.form__inputs input.error {
  border-color: red;
  border-radius: 0.25em;
}
.form__inputs input:-webkit-autofill {
  -webkit-text-fill-color: white !important;
  -webkit-box-shadow: 0 0 0 30px #112944 inset !important;
  border: #112944 0.1em solid;
  border-bottom-color: #c4c4c4;
}
.form__inputs input:hover {
  border-bottom-color: white;
}
.form__inputs input:focus {
  border: white 0.1em solid;
  border-radius: 0.25em;
}
.form__inputs input::-moz-placeholder {
  display: flex;
  align-items: center;
  font-size: 0.8em;
  color: white;
  opacity: 0.7;
}
.form__inputs input:-ms-input-placeholder {
  display: flex;
  align-items: center;
  font-size: 0.8em;
  color: white;
  opacity: 0.7;
}
.form__inputs input::placeholder {
  display: flex;
  align-items: center;
  font-size: 0.8em;
  color: white;
  opacity: 0.7;
}
.form__btn {
  margin-top: 1em;
  width: 100%;
}
.form small {
  margin-top: 1.25em;
  width: 100%;
  font-size: 0.8em;
  text-align: center;
}

/* Sections */
.section1 {
  padding: 25rem 0 27rem;
  display: flex;
  justify-content: flex-start;
  align-items: center;
  background: linear-gradient(150deg, #347d8a -22%, #636373 -16%, #00d4ff 93%);
  background-color: #00d4ff;
}
.section1__title {
  margin: 0;
  font-family: "Arial", sans-serif;
  font-size: 6rem;
  font-weight: 900;
  line-height: 1.2;
}
.section1__buttons {
  display: flex;
  margin-top: 2em;
}
.section1__buttons > * + * {
  margin-left: 1em;
}

.table {
  font-size: 1rem;
  display: flex;
  flex-direction: column;
}
.table .row {
  font-size: 2em;
  display: flex;
  justify-content: flex-start;
  align-items: center;
  text-align: center;
  width: 100%;
  border-bottom: #c4c4c4 2px solid;
}
.table .row:first-child {
  font-size: 1.7em;
}
.table .row:first-child :first-child {
  justify-content: center;
}
.table .row div {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  width: 33.3333333333%;
  line-height: 4rem;
}
@media (max-width: 768px) {
  .table .row div {
    line-height: 5rem;
    width: 25%;
  }
}
.table .row div:first-child {
  justify-content: flex-start;
}
@media (max-width: 768px) {
  .table .row div:first-child {
    width: 50%;
  }
}

.section2 {
  background-color: #202030;
  background-color: var(--secondary-color);
  padding: 10rem 5rem 15rem;
}
@media (max-width: 768px) {
  .section2 {
    padding: 10rem 2.1rem 15rem;
  }
}
.section2__buttons {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: 10rem;
}

.about-us {
  font-size: 1.8rem;
  display: flex;
  justify-content: space-between;
  padding: 2em 0;
  text-align: center;
}
@media (max-width: 768px) {
  .about-us {
    font-size: 2.5rem;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }
}
.about-us__item {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 25%;
  padding: 0.1em;
}
@media (max-width: 768px) {
  .about-us__item {
    width: 100%;
    margin-bottom: 5rem;
  }
  .about-us__item:last-child {
    margin-bottom: 0;
  }
}
.about-us__item h3 {
  margin: 0;
  margin-bottom: 0.3em;
  font-size: 1.25em;
}
.about-us__item p {
  font-size: 1.2em;
}

.section3 {
  background-color: #f4f2f2;
  color: #202030;
  color: var(--secondary-color);
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
